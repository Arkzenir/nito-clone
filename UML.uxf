<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <help_text/>
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2350</x>
      <y>40</y>
      <w>280</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>/Client/
--
-tcp: TcpClient
-udp: UdpClient
--
+Client(String serverAddress): ctor
+messageReceived(String msg): void
+sendMessage(String msg): void
+sendImage(Screenshot screenshot): void
+close(): void


bg=black
fg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2280</x>
      <y>400</y>
      <w>340</w>
      <h>320</h>
    </coordinates>
    <panel_attributes>Screenshot
--
-img: BufferedImage
-ip: InetAddress
-port: int
+MAX_SIZE = 64000: int
-scale: double
--
+Screenshot(DatagramPacket packet): ctor
+Screenshot(BufferedImage img, double scale): ctor
+toByteArray(): byte[]
+clone(): Screenshot
-updateScale(): void
+prepareForSending(): void
+scale(double scale): void
+scale(int newWidth, int newHeight): void
+getIP(): InetAddress
+getPort(): int
+getImage(): BufferedImage


bg=black
fg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1620</x>
      <y>40</y>
      <w>350</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>/Server/
--
+TERMINATION = "###": String
+TCP_PORT = 4455: int
+UDP_PORT = 4456: int
-tcp: TcpServer
-udp: UdpServer
--
+Server(): ctor
+connectionLost(Socket socket): void
+messageReceived(String msg, Socket socket): void
+screenshotReceived(Screenshot img): void
+sendMessageToAll(String msg): void
+sendMessage(String msg, InetAddress address): void
+sendMessage(String msg, String address): void
+close(): void

bg=black
fg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1920</x>
      <y>310</y>
      <w>350</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>/TcpClient/
--
-socket: Socket
-msgListenerThread: Thread
--
+TcpClient(String serverAddress, int serverPort): ctor
+received(String msg): void
+sendMessage(String msg): void
-listenForMessages(): void
+close(): void


bg=black
fg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1980</x>
      <y>40</y>
      <w>360</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>/TcpServer/
--
-server: ServerSocket
-sockets: ArrayList&lt;Socket&gt;
-msgListenerThreads: ArrayList&lt;Thread&gt;
-isBlocked: boolean
-connectionListenerThread: Thread
--
+TcpServer(int port): ctor
+connectionLost(Socket socket): void
+received(String message, Socket socket): void
-listenForConnections(): void
-listenForMessages(Socket socket): void
+sendMessageToAll(String msg): void
+sendMessage(String msg, InetAddress address): void
+sendMessage(String msg, String address): void
+close(): void
bg=black
fg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2350</x>
      <y>220</y>
      <w>350</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>UdpClient
--
-serverAddress: InetAddress
-serverPort: int
-socket: DatagramSocket
--
+UdpClient(String serverAddress, int serverPort): ctor
+sendImage(Screenshot screenshot): void
+close(): void
+sendImageByParts(BufferedImage img): void


bg=black
fg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1620</x>
      <y>290</y>
      <w>290</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>/UdpServer/
--
-socket: DatagramSocket
-listenerThread: Thread
--
+UdpServer(int port): ctor
+screenshotReceived(Screenshot img): void
-readImage(): void
+close(): void
+readImageByParts(): BufferedImage


bg=black
fg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1610</x>
      <y>10</y>
      <w>1100</w>
      <h>720</h>
    </coordinates>
    <panel_attributes>network
bg=black
fg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1240</x>
      <y>60</y>
      <w>160</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>Exam
--
-title: String
-questions: ArrayList
--
+Exam(String title): void


bg=black
fg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>860</x>
      <y>60</y>
      <w>320</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>Question
--
-title: String
-statements: ArrayList&lt;Statement&gt;
-templates: ArrayList&lt;Template&gt;
--
+changeOrder(int prevIndex, int nextIndex): void
+addTemplate(Template template): void
+addStatement(Statement statement): void
+Question(String title): void



bg=black
fg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1320</x>
      <y>160</y>
      <w>130</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>Statement
--
-pdf: File
-available: boolean
--



bg=black
fg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1190</x>
      <y>160</y>
      <w>120</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>Template
--
-type: int
-template: String
--



bg=black
fg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1240</x>
      <y>300</y>
      <w>350</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>Question
--
-solutions: ArrayList&lt;Solution&gt;
-statement: String
--
+Question(String statement, ArrayList templates)
+submitAll(): void
+saveAll(): void
+getSolution(int index): Solution</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>770</x>
      <y>290</y>
      <w>380</w>
      <h>340</h>
    </coordinates>
    <panel_attributes>Part
--
+TYPE_UNKNOWN = 0: int
+TYPE_CODING = 1: int
-type: int
-title: String
-solution: String
-folder: File
-question: Question
-done: boolean
--
+Solution(int type, String answerTemplate): ctor
+updateAnswer(String answer): void
+toggleDone(): void
+save(): void
+submit(Client c): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>0</x>
      <y>420</y>
      <w>760</w>
      <h>320</h>
    </coordinates>
    <panel_attributes>examinee</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>850</x>
      <y>30</y>
      <w>610</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>exam_preparation
bg=black
fg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>840</x>
      <y>0</y>
      <w>630</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>admin
bg=black
fg=white</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1320</x>
      <y>540</y>
      <w>290</w>
      <h>370</h>
    </coordinates>
    <panel_attributes>Model
--
+STATUS_CONNECTED = 1: int
+STATUS_DISCONNECTED = 2: int
+STATUS_LOGIN = 3: int
+STATUS_SUSPENDED = 4: int
+STATUS_BANNED = 5: int
+STATUS_FINISHED = 6: int
-username: String
-password: String
-adminIP: String
-timeRemain: int
-timeTotal: int
-client: Client
-status: int
-examData: ExamEntry
--
+Model( username, password, adminIP): ctor
+getExamData(): void
+submitAll(): void
+setDone(ExamEntry): void
+setSolution(ExamEntry, String): void
+sendScreen()
+sendMessage()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1070</x>
      <y>640</y>
      <w>190</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>ExamEntry
--
+TYPE_??? = ?: int
-id: String
-markable: boolean
-solvable: boolean
-type: int
-done: boolean
--
+send(Client)
+setDone()
+isDone()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>790</x>
      <y>690</y>
      <w>220</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>ExamContainer
--
-children: ArrayList
--
+add(ExamEntry): void
+getAll(): ArrayList
??? +remove(ExamEntry) ???</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1000</x>
      <y>730</y>
      <w>90</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>880</x>
      <y>780</y>
      <w>340</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=-&gt;&gt;&gt;&gt;
m1=0..*</panel_attributes>
    <additional_attributes>300.0;40.0;300.0;100.0;10.0;100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1250</x>
      <y>740</y>
      <w>90</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m2=1</panel_attributes>
    <additional_attributes>70.0;10.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
